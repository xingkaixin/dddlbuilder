import React from "react";
import { Database, Server, Archive } from "lucide-react";
import type { DatabaseType } from "../types";

export const DATABASE_OPTIONS: Array<{
  value: DatabaseType;
  label: string;
  icon: React.ComponentType<{ className?: string }>;
}> = [
  { value: "mysql", label: "MySQL", icon: Database },
  { value: "postgresql", label: "PostgreSQL", icon: Database },
  { value: "sqlserver", label: "SQL Server", icon: Server },
  { value: "oracle", label: "Oracle", icon: Archive },
];

export const YES_VALUES = new Set(["y", "yes", "true", "1", "是", "√"]);

// Reserved keywords for each database (lowercase)
export const RESERVED_KEYWORDS: Record<DatabaseType, Set<string>> = {
  mysql: new Set([
    "add",
    "all",
    "alter",
    "analyze",
    "and",
    "as",
    "asc",
    "between",
    "by",
    "case",
    "column",
    "constraint",
    "create",
    "cross",
    "database",
    "default",
    "delete",
    "desc",
    "distinct",
    "drop",
    "else",
    "exists",
    "false",
    "from",
    "group",
    "having",
    "if",
    "in",
    "index",
    "inner",
    "insert",
    "into",
    "is",
    "join",
    "key",
    "left",
    "like",
    "limit",
    "not",
    "null",
    "on",
    "or",
    "order",
    "outer",
    "primary",
    "right",
    "select",
    "table",
    "then",
    "true",
    "union",
    "unique",
    "update",
    "values",
    "where",
  ]),
  postgresql: new Set([
    "all",
    "analyze",
    "and",
    "any",
    "array",
    "as",
    "asc",
    "between",
    "case",
    "check",
    "collate",
    "column",
    "constraint",
    "create",
    "cross",
    "current_date",
    "default",
    "delete",
    "desc",
    "distinct",
    "else",
    "exists",
    "false",
    "from",
    "full",
    "group",
    "having",
    "ilike",
    "in",
    "inner",
    "insert",
    "intersect",
    "into",
    "is",
    "join",
    "left",
    "like",
    "limit",
    "not",
    "null",
    "on",
    "or",
    "order",
    "outer",
    "primary",
    "right",
    "select",
    "table",
    "then",
    "true",
    "union",
    "unique",
    "update",
    "using",
    "values",
    "where",
    "with",
  ]),
  sqlserver: new Set([
    "add",
    "all",
    "alter",
    "and",
    "any",
    "as",
    "asc",
    "authorization",
    "backup",
    "begin",
    "between",
    "break",
    "by",
    "case",
    "check",
    "close",
    "column",
    "commit",
    "constraint",
    "create",
    "cross",
    "current",
    "cursor",
    "database",
    "declare",
    "default",
    "delete",
    "desc",
    "distinct",
    "drop",
    "else",
    "end",
    "exec",
    "exists",
    "false",
    "fetch",
    "for",
    "foreign",
    "from",
    "full",
    "function",
    "grant",
    "group",
    "having",
    "in",
    "index",
    "inner",
    "insert",
    "into",
    "is",
    "join",
    "key",
    "left",
    "like",
    "merge",
    "not",
    "null",
    "on",
    "open",
    "or",
    "order",
    "outer",
    "primary",
    "proc",
    "procedure",
    "return",
    "right",
    "rollback",
    "schema",
    "select",
    "set",
    "table",
    "then",
    "top",
    "trigger",
    "true",
    "union",
    "unique",
    "update",
    "values",
    "view",
    "where",
    "while",
  ]),
  oracle: new Set([
    "access",
    "add",
    "all",
    "alter",
    "and",
    "any",
    "as",
    "asc",
    "audit",
    "between",
    "by",
    "case",
    "check",
    "cluster",
    "column",
    "comment",
    "compress",
    "connect",
    "create",
    "current",
    "date",
    "default",
    "delete",
    "desc",
    "distinct",
    "drop",
    "else",
    "exists",
    "false",
    "for",
    "from",
    "grant",
    "group",
    "having",
    "in",
    "index",
    "insert",
    "integer",
    "intersect",
    "into",
    "is",
    "level",
    "like",
    "lock",
    "long",
    "minus",
    "nchar",
    "not",
    "nowait",
    "null",
    "number",
    "of",
    "on",
    "or",
    "order",
    "prior",
    "raw",
    "rename",
    "resource",
    "revoke",
    "row",
    "rowid",
    "rownum",
    "select",
    "session",
    "share",
    "size",
    "smallint",
    "start",
    "synonym",
    "sysdate",
    "table",
    "then",
    "to",
    "trigger",
    "true",
    "uid",
    "union",
    "unique",
    "update",
    "user",
    "validate",
    "values",
    "varchar",
    "varchar2",
    "view",
    "where",
    "with",
  ]),
};

// default helpers
export const DEFAULT_KIND_OPTIONS = [
  "无",
  "自增",
  "常量",
  "当前时间",
  "uuid",
] as const;

export const ON_UPDATE_OPTIONS = ["无", "当前时间"] as const;

export const COLUMN_HEADERS = [
  "序号",
  "字段名",
  "字段中文名",
  "字段类型",
  "是否为空",
  "默认类型",
  "默认值",
  "更新策略",
];

export const STORAGE_KEY = "ddlbuilder:state:v1";

// Handsontable column settings will be imported from the main component due to type issues
// export const COLUMN_SETTINGS: Handsontable.ColumnSettings[] = [...];