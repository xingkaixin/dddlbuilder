import type { ParsedFieldType } from "../types";

export interface TypeMappingRule {
  defaultArgs?: string[];
  mapping?: string;
  suffix?: string;
  transform?: (parsed: ParsedFieldType) => string;
}

export interface DatabaseTypeMapping {
  [canonicalType: string]: TypeMappingRule;
}

export const TYPE_MAPPINGS: Record<string, DatabaseTypeMapping> = {
  mysql: {
    varchar: { mapping: "varchar", defaultArgs: ["255"] },
    nvarchar: { mapping: "varchar", defaultArgs: ["255"] },
    char: { mapping: "char", defaultArgs: ["1"] },
    nchar: { mapping: "char", defaultArgs: ["1"] },
    text: { mapping: "text" },
    mediumtext: { mapping: "mediumtext" },
    longtext: { mapping: "longtext" },
    int: { mapping: "int", suffix: "UNSIGNED" },
    tinyint: { mapping: "tinyint", defaultArgs: ["1"] },
    smallint: { mapping: "smallint" },
    bigint: { mapping: "bigint", suffix: "UNSIGNED" },
    decimal: { mapping: "decimal", defaultArgs: ["10", "0"] },
    numeric: { mapping: "decimal", defaultArgs: ["10", "0"] },
    float: { mapping: "float", defaultArgs: ["10", "2"] },
    double: { mapping: "double", defaultArgs: ["10", "2"] },
    date: { mapping: "date" },
    datetime: { mapping: "datetime" },
    timestamp: { mapping: "timestamp", defaultArgs: ["6"] },
    time: { mapping: "time", defaultArgs: ["6"] },
    boolean: { mapping: "tinyint", defaultArgs: ["1"] },
    bool: { mapping: "tinyint", defaultArgs: ["1"] },
    json: { mapping: "json" },
    blob: { mapping: "blob" },
    varbinary: { mapping: "varbinary", defaultArgs: ["255"] },
    uuid: { mapping: "char", defaultArgs: ["36"] },
  },

  postgresql: {
    varchar: { mapping: "varchar" },
    nvarchar: { mapping: "varchar" },
    char: { mapping: "char" },
    nchar: { mapping: "char" },
    text: { mapping: "text" },
    mediumtext: { mapping: "text" },
    longtext: { mapping: "text" },
    int: { mapping: "integer" },
    integer: { mapping: "integer" },
    smallint: { mapping: "smallint" },
    bigint: { mapping: "bigint" },
    decimal: { mapping: "decimal" },
    numeric: { mapping: "numeric" },
    float: { mapping: "real" },
    double: { mapping: "double precision" },
    real: { mapping: "real" },
    date: { mapping: "date" },
    datetime: { mapping: "timestamp" },
    timestamp: { mapping: "timestamp" },
    timestamptz: { mapping: "timestamptz" },
    time: { mapping: "time" },
    timetz: { mapping: "timetz" },
    boolean: { mapping: "boolean" },
    bool: { mapping: "boolean" },
    json: { mapping: "json" },
    jsonb: { mapping: "jsonb" },
    blob: { mapping: "bytea" },
    varbinary: { mapping: "bytea" },
    uuid: { mapping: "uuid" },
    serial: { mapping: "serial" },
    bigserial: { mapping: "bigserial" },
  },

  sqlserver: {
    varchar: { mapping: "varchar", defaultArgs: ["255"] },
    nvarchar: { mapping: "nvarchar", defaultArgs: ["255"] },
    char: { mapping: "char", defaultArgs: ["1"] },
    nchar: { mapping: "nchar", defaultArgs: ["1"] },
    text: { mapping: "varchar", defaultArgs: ["MAX"] },
    mediumtext: { mapping: "varchar", defaultArgs: ["MAX"] },
    longtext: { mapping: "varchar", defaultArgs: ["MAX"] },
    int: { mapping: "int" },
    integer: { mapping: "int" },
    smallint: { mapping: "smallint" },
    tinyint: { mapping: "tinyint" },
    bigint: { mapping: "bigint" },
    decimal: { mapping: "decimal", defaultArgs: ["18", "0"] },
    numeric: { mapping: "decimal", defaultArgs: ["18", "0"] },
    float: { mapping: "float", defaultArgs: ["53"] },
    double: { mapping: "float", defaultArgs: ["53"] },
    real: { mapping: "real" },
    date: { mapping: "date" },
    datetime: { mapping: "datetime" },
    datetime2: { mapping: "datetime2", defaultArgs: ["7"] },
    datetimeoffset: { mapping: "datetimeoffset", defaultArgs: ["7"] },
    timestamp: { mapping: "datetime2", defaultArgs: ["7"] },
    time: { mapping: "time", defaultArgs: ["7"] },
    boolean: { mapping: "bit" },
    bool: { mapping: "bit" },
    json: { mapping: "nvarchar", defaultArgs: ["MAX"] },
    blob: { mapping: "varbinary", defaultArgs: ["MAX"] },
    varbinary: { mapping: "varbinary", defaultArgs: ["255"] },
    uuid: { mapping: "uniqueidentifier" },
    xml: { mapping: "xml" },
  },

  oracle: {
    varchar: { mapping: "varchar2", defaultArgs: ["255"] },
    nvarchar: { mapping: "nvarchar2", defaultArgs: ["255"] },
    char: { mapping: "char", defaultArgs: ["1"] },
    nchar: { mapping: "nchar", defaultArgs: ["1"] },
    text: { mapping: "clob" },
    mediumtext: { mapping: "clob" },
    longtext: { mapping: "clob" },
    int: { mapping: "number", defaultArgs: ["10"] },
    integer: { mapping: "number", defaultArgs: ["10"] },
    smallint: { mapping: "number", defaultArgs: ["5"] },
    tinyint: { mapping: "number", defaultArgs: ["3"] },
    bigint: { mapping: "number", defaultArgs: ["19"] },
    decimal: { mapping: "number", defaultArgs: ["10", "0"] },
    numeric: { mapping: "number", defaultArgs: ["10", "0"] },
    number: { mapping: "number", defaultArgs: ["10", "0"] },
    float: { mapping: "float", defaultArgs: ["126"] },
    double: { mapping: "float", defaultArgs: ["126"] },
    real: { mapping: "float", defaultArgs: ["63"] },
    date: { mapping: "date" },
    datetime: { mapping: "timestamp", defaultArgs: ["6"] },
    timestamp: { mapping: "timestamp", defaultArgs: ["6"] },
    timestamptz: { mapping: "timestamp", defaultArgs: ["6"], suffix: "WITH TIME ZONE" },
    time: { mapping: "timestamp", defaultArgs: ["6"] },
    boolean: { mapping: "number", defaultArgs: ["1"] },
    bool: { mapping: "number", defaultArgs: ["1"] },
    json: { mapping: "clob" },
    blob: { mapping: "blob" },
    varbinary: { mapping: "blob" },
    uuid: { mapping: "raw", defaultArgs: ["16"] },
    xml: { mapping: "xmltype" },
    clob: { mapping: "clob" },
  },
};